#include "delay.h"
#include "gpio.h"
#include "sys.h"
#include "usart.h"
#include "timer4_usart.h"
#include "sim900a.h"
#include "string.h"




vu8 NewDataUpdate_Usart = 0; /*串口端数据更新*/
vu8 NewDataUpdate_Network = 0; /*网络端数据更新*/

//
u8 DTU_CurrentState = DTU_INIT_NULL;
//
u8 GPRS_CfgState = GPRS_CFG_NULL;
//
u8 DTU_CfgState = DTU_CFG_NULL;




u8 tempint=0;
u8 temp_buf[100] = {0};

extern void DTU_Loop(void);
extern void DTU_cfg(void);
extern void GPRS_cfg(u8 event);

		u8* tempp=NULL;
u8 str1[10],str2[10];
u8 strforsend[100];
int main(void)
{
	//
    delay_init();	    	 //
    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
    uart_init_serial(115200);	 //
    uart_init_network(115200);	 //
    TIM3_Int_Init(100 - 1, 7199); //100us * n
    TIM4_Int_Init(100 - 1, 7199); //100us * n

	
//		tempp = sim900a_check_cmd("df sdf Ready","SMS Ready");

//		strcpy((char*)strforsend,(const char*)"AT\r\n");
//				tempint=	strlen((const char*)strforsend);
//	
	
	while(1)
	{
		GPRS_cfg(0);
//		UsartSendStr_network("yanlutian",10);
//		delay_ms(200);
	}
	
	
    while(1)
    {
				DTU_Loop();
        
    }
}


/*******************************************************************************
* Function Name  : 
* Description    : 
* Input            : None
* Output         : None
* Return         : None
*******************************************************************************/
void DTU_Loop(void)
{
static u8 GoHereTimes=0;

/*DTU state machine*/
switch (DTU_CurrentState)
{
case DTU_INIT_NULL:

break;

case DTU_INIT_PWROFF:				
if(!GoHereTimes)
{
gprs_reset();
GoHereTimes=1;
}
else
{
if(NewDataUpdate_Network)
{
if(sim900a_check_cmd(USART_NETWORK_RX_BUF,(u8*)"SMS Ready"))
{
GPRS_CfgState=GPRS_CFG_RD_INFO;
GoHereTimes=0;
}
else
{
}
NewDataUpdate_Network = 0;
}
}					
//模块上电
GPRS_PWR=GPRS_PWR_ON;
break;

case DTU_INIT_PWRON:

break;

case DTU_INIT_DTUCFG:
break;

case DTU_INIT_GPRSCFG:
break;

case DTU_NORMAL_OFFLINE:
break;

case DTU_NORMAL_ONLINE:
/**/
if(NewDataUpdate_Usart) {
UsartSendStr_serial(temp_buf, 8);
NewDataUpdate_Usart = 0;
}

/**/
if(NewDataUpdate_Network) {
UsartSendStr_network(temp_buf, 8);
NewDataUpdate_Network = 0;
}
break;

case DTU_NORMAL_SUSPEND:
break;

default:
break;
}
}



/*******************************************************************************
* Function Name  :
* Description    :
* Input            : None
* Output         : None
* Return         : None
*******************************************************************************/
void DTU_cfg(void)
{

    switch (DTU_CfgState)
    {
    case DTU_CFG_NULL:

        break;

    case DTU_CFG_PORTSET:

        break;

    case DTU_CFG_BAUDRATESET:

        break;

    case DTU_CFG_BUILD_CONNECT:

        break;

    case DTU_CFG_HEARTSET:

        break;

    case DTU_CFG_MODEIDSET:

        break;

    default:
        break;
    }
}


/*******************************************************************************
* Function Name  :
* Description    :
* Input            : None
* Output         : None
* Return         : None
*******************************************************************************/
void GPRS_cfg(u8 event)
{
		static u8 GoHereTimes=0;
		char server_info[100];		//用于存储服务器连接信息
    char temp_buf[20];

	//
    switch (GPRS_CfgState)
    {
    case GPRS_CFG_NULL:
			
        break;

    case GPRS_CFG_RESET:
			if(!GoHereTimes)
			{
				gprs_reset();
				GoHereTimes=1;
			}
			else
			{
				if(NewDataUpdate_Network) {
					if(sim900a_check_cmd(USART_NETWORK_RX_BUF,(u8*)"SMS Ready"))
					{
						GPRS_CfgState=GPRS_CFG_RD_INFO;
						GoHereTimes=0;
					}
					else
					{
					}
					NewDataUpdate_Network = 0;
				}
			}
        break;

    case GPRS_CFG_RD_INFO:
			if(!GoHereTimes)
			{
				//read info from eep
					GoHereTimes=1;
			}
			else
			{
						GPRS_CfgState=GPRS_CFG_AT;
						GoHereTimes=0;
			}

        break;

    case GPRS_CFG_AT:
				if(!GoHereTimes)
				{
					//
					strcpy((char*)strforsend,(const char*)"AT\r\n");
					UsartSendStr_network(strforsend,strlen((const char*)strforsend));
					GoHereTimes=1;
				}
				else
				{
						if(NewDataUpdate_Network)
						{
							if(sim900a_check_cmd(USART_NETWORK_RX_BUF,(u8*)"OK"))
							{
								GPRS_CfgState=GPRS_CFG_ATE0;
								GoHereTimes=0;
							}
							else
							{
							}
							NewDataUpdate_Network = 0;
						}
				}

        break;

    case GPRS_CFG_ATE0:
				if(!GoHereTimes)
				{
					//
					strcpy((char*)strforsend,(const char*)"ATE0\r\n");
					UsartSendStr_network(strforsend,strlen((const char*)strforsend));
					GoHereTimes=1;
				}
				else
				{
						if(NewDataUpdate_Network)
						{
							if(sim900a_check_cmd(USART_NETWORK_RX_BUF,(u8*)"OK"))
							{
								GPRS_CfgState=GPRS_CFG_ATCSQ;
								GoHereTimes=0;
							}
							else
							{
							}
							NewDataUpdate_Network = 0;
						}
				}
        break;

    case GPRS_CFG_ATCSQ:
				if(!GoHereTimes)
				{
					//
					strcpy((char*)strforsend,(const char*)"AT+CSQ\r\n");
					UsartSendStr_network(strforsend,strlen((const char*)strforsend));
					GoHereTimes=1;
				}
				else
				{
						if(NewDataUpdate_Network)
						{
							if(sim900a_check_cmd(USART_NETWORK_RX_BUF,(u8*)"OK"))
							{
								GPRS_CfgState=GPRS_CFG_ATCREG;
								GoHereTimes=0;
							}
							else
							{
							}
							NewDataUpdate_Network = 0;
						}
				}
        break;

    case GPRS_CFG_ATCREG:
				if(!GoHereTimes)
				{
					//
					strcpy((char*)strforsend,(const char*)"AT+CREG?\r\n");
					UsartSendStr_network(strforsend,strlen((const char*)strforsend));
					GoHereTimes=1;
				}
				else
				{
						if(NewDataUpdate_Network)
						{
							if(sim900a_check_cmd(USART_NETWORK_RX_BUF,(u8*)"OK"))
							{
								GPRS_CfgState=GPRS_CFG_ATCGATT;
								GoHereTimes=0;
							}
							else
							{
							}
							NewDataUpdate_Network = 0;
						}
				}
        break;

    case GPRS_CFG_ATCGATT:
	if(!GoHereTimes)
				{
					//
					strcpy((char*)strforsend,(const char*)"AT+CGATT?\r\n");
					UsartSendStr_network(strforsend,strlen((const char*)strforsend));
					GoHereTimes=1;
				}
				else
				{
						if(NewDataUpdate_Network)
						{
							if(sim900a_check_cmd(USART_NETWORK_RX_BUF,(u8*)"OK"))
							{
								GPRS_CfgState=GPRS_CFG_ATCSTT;
								GoHereTimes=0;
							}
							else
							{
							}
							NewDataUpdate_Network = 0;
						}
				}
        break;

    case GPRS_CFG_ATCSTT:
	if(!GoHereTimes)
				{
					//
					sprintf((char*)temp_buf, "AT+CSTT=\"%s\"\r\n", Server_APN);
					strcpy((char*)strforsend,(const char*)temp_buf);
					UsartSendStr_network(strforsend,strlen((const char*)strforsend));
					GoHereTimes=1;
				}
				else
				{
						if(NewDataUpdate_Network)
						{
							if(sim900a_check_cmd(USART_NETWORK_RX_BUF,(u8*)"OK"))
							{
								GPRS_CfgState=GPRS_CFG_ATCIICR;
								GoHereTimes=0;
							}
							else
							{
							}
							NewDataUpdate_Network = 0;
						}
				}
        break;

    case GPRS_CFG_ATCIICR:
	if(!GoHereTimes)
				{
					//
					strcpy((char*)strforsend,(const char*)"AT+CIICR\r\n");
					UsartSendStr_network(strforsend,strlen((const char*)strforsend));
					GoHereTimes=1;
				}
				else
				{
						if(NewDataUpdate_Network)
						{
							if(sim900a_check_cmd(USART_NETWORK_RX_BUF,(u8*)"OK"))
							{
								GPRS_CfgState=GPRS_CFG_ATCIFSR;
								GoHereTimes=0;
							}
							else
							{
							}
							NewDataUpdate_Network = 0;
						}
				}
        break;

    case GPRS_CFG_ATCIFSR:
	if(!GoHereTimes)
				{
					//
					strcpy((char*)strforsend,(const char*)"AT+CIFSR\r\n");
					UsartSendStr_network(strforsend,strlen((const char*)strforsend));
					GoHereTimes=1;
				}
				else
				{
						if(NewDataUpdate_Network)
						{
							if(sim900a_check_cmd(USART_NETWORK_RX_BUF,(u8*)"OK"))
							{
								GPRS_CfgState=GPRS_CFG_ATCIPSHUT;
								GoHereTimes=0;
							}
							else
							{
							}
							NewDataUpdate_Network = 0;
						}
				}
        break;

    case GPRS_CFG_ATCIPSHUT:
	if(!GoHereTimes)
				{
					//
					strcpy((char*)strforsend,(const char*)"AT+CIPSHUT\r\n");
					UsartSendStr_network(strforsend,strlen((const char*)strforsend));
					GoHereTimes=1;
				}
				else
				{
						if(NewDataUpdate_Network)
						{
							if(sim900a_check_cmd(USART_NETWORK_RX_BUF,(u8*)"SHUT OK"))
							{
								GPRS_CfgState=GPRS_CFG_ATCIPMODE;
								GoHereTimes=0;
							}
							else
							{
							}
							NewDataUpdate_Network = 0;
						}
				}
        break;

    case GPRS_CFG_ATCIPMODE:
	if(!GoHereTimes)
				{
					//
					strcpy((char*)strforsend,(const char*)"AT+CIPMODE=1\r\n");
					UsartSendStr_network(strforsend,strlen((const char*)strforsend));
					GoHereTimes=1;
				}
				else
				{
						if(NewDataUpdate_Network)
						{
							if(sim900a_check_cmd(USART_NETWORK_RX_BUF,(u8*)"OK"))
							{
								GPRS_CfgState=GPRS_CFG_ATCIPMUX;
								GoHereTimes=0;
							}
							else
							{
							}
							NewDataUpdate_Network = 0;
						}
				}
        break;
				
	 case GPRS_CFG_ATCIPMUX:
		if(!GoHereTimes)
					{
						//
						strcpy((char*)strforsend,(const char*)"AT+CIPMUX=0\r\n");
						UsartSendStr_network(strforsend,strlen((const char*)strforsend));
						GoHereTimes=1;
					}
					else
					{
							if(NewDataUpdate_Network)
							{
								if(sim900a_check_cmd(USART_NETWORK_RX_BUF,(u8*)"OK"))
								{
									GPRS_CfgState=GPRS_CFG_ATCIPSTART;
									GoHereTimes=0;
								}
								else
								{
								}
								NewDataUpdate_Network = 0;
							}
					}
					break;

    case GPRS_CFG_ATCIPSTART:
	if(!GoHereTimes)
				{
					//
					sprintf((char*)server_info, "AT+CIPSTART=\"%s\",\"%s\",\"%s\"\r\n", \
																			"TCP", Server_IpAddr, Server_Port);
					strcpy((char*)strforsend,(const char*)server_info);
					UsartSendStr_network(strforsend,strlen((const char*)strforsend));
					GoHereTimes=1;
				}
				else
				{
						if(NewDataUpdate_Network)
						{
							if(sim900a_check_cmd(USART_NETWORK_RX_BUF,(u8*)"CONNECT OK"))
							{
//								GPRS_CfgState=GPRS_CFG_ATCGATT;
								GoHereTimes=0;
							}
							else
							{
							}
							NewDataUpdate_Network = 0;
						}
				}
        break;

    default:
        break;
    }
}











